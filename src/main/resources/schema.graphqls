# ================
#  GraphQL Schema
# ================

schema {
	query: Query
	mutation: Mutation
}


# Queries
# =======
type Query {
    allPriorities: [Priority]!
    allStatuses: [Status]!
	# Task queries :
	allTasks: [Task]!
	allTasksInPeriod(period: PeriodInput!): [Task]!
	task(id: Int!): Task
	# Project queries :
	allProjects: [Project]!
	project(id: Int!): Project
	taskProject(id: Int!): Project
	projectTasks(id: Int!): [Task]!
}


# Mutations
# =========
type Mutation {
	# Task mutations :
	createTask(task: TaskInput!): Task
	updateTask(task: TaskInput!): Boolean
	deleteTask(id: Int!): Boolean
	# Project mutations :
	createProject(project: ProjectInput!): Project
	updateProject(project: ProjectInput!): Boolean
	deleteProject(id: Int!): Boolean
}


# Basic Types
# ===========
type Priority {
    id: Int!
    label: String!
}

type Status {
    id: Int!
    label: String!
}

type Period {
	start: String
	end: String
}

type Project {
	id: Int!
	name: String!
	description: String
	dates: Period
}

type Task {
	id: Int!
	name: String!
	description: String
	planning: Period
}


# Input Types
# ===========
input PeriodInput {
    start: String
    end: String
}

input TaskInput {
    id: Int
    name: String!
    description: String
}

input ProjectInput {
	id: Int
	name: String!
	description: String
}


# Enum Types
# ==========
enum TimeUnit {
	MINUTE
	HOUR
	DAY
	WEEK
	MONTH
	YEAR
}

